---
resources:
- name: platform-automation-tasks
  type: s3
  source:
    endpoint: ((s3.address))
    bucket: ((s3.bucket_name))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    regexp: platform-automation-tasks-(.*).zip

- name: platform-automation-image
  type: s3
  source:
    endpoint: ((s3.address))
    bucket: ((s3.bucket_name))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    regexp: vsphere-platform-automation-image-(.*).tar.gz

- name: state
  type: s3
  source:
    endpoint: ((s3.address))
    bucket: ((s3.bucket_name))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    regexp: state-(.*).yml

- name: configuration
  type: git
  source:
    private_key: ((config-repo-key.private_key))
    uri: ((config-repo-uri))

- name: installation
  type: s3
  source:
    endpoint: ((s3.address))
    bucket: ((s3.bucket_name))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    regexp: installation-(.*).zip

- name: daily
  type: time
  source: { interval: 24h }

- name: pas-product
  type: s3
  source:
    endpoint: ((s3.address))
    bucket: ((s3.bucket_name))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    regexp: \[.*\]srt-(.*).pivotal
    skip_download: true

- name: ncp-product
  type: s3
  source:
    endpoint: ((s3.address))
    bucket: ((s3.bucket_name))
    access_key_id: ((s3.access_key))
    secret_access_key: ((s3.secret_key))
    regexp: \[.*\]VMware-NSX-(.*).pivotal
    skip_download: true

jobs:
- name: install-opsman
  plan:
  - in_parallel:
    - get: platform-automation-tasks
      params: { unpack: true }
    - get: platform-automation-image
      params: { unpack: true }
    - get: configuration
    - get: state
  - task: interpolate-env-creds
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
      PREFIX: '/concourse/sandbox'
      SKIP_MISSING: false
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configuration
  - task: download-opsman-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product/opsman.yml
      SOURCE: s3
    input_mapping:
      config: interpolated-configuration
    output_mapping:
      downloaded-product: opsman-image
  - task: create-vm
    image: platform-automation-image
    file: platform-automation-tasks/tasks/create-vm.yml
    input_mapping:
      image: opsman-image
      config: interpolated-configuration
    params:
      OPSMAN_CONFIG_FILE: sandbox/opsman.yml
      STATE_FILE: state-$timestamp.yml
    ensure:
      do:
      - put: state
        params: { file: generated-state/state-*.yml }
  - task: configure-authentication
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-authentication.yml
    input_mapping:
      env: interpolated-configuration
      config: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml
      AUTH_CONFIG_FILE: sandbox/auth.yml
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      env: interpolated-configuration
      config: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml
      DIRECTOR_CONFIG_FILE: sandbox/director.yml
  - task: apply-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml

- name: export-installation
  plan:
  - in_parallel:
    - get: platform-automation-tasks
      params: { unpack: true }
    - get: platform-automation-image
      params: { unpack: true }
    - get: configuration
    - get: daily
      trigger: true
  - task: interpolate-env-creds
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
      PREFIX: '/concourse/sandbox'
      SKIP_MISSING: false
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configuration
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml
  - put: installation
    params: { file: installation/installation-*.zip }

- name: upgrade-opsman
  plan:
  - in_parallel:
    - get: platform-automation-tasks
      params: { unpack: true }
    - get: platform-automation-image
      params: { unpack: true }
    - get: configuration
    - get: state
    - get: installation
      passed: [ export-installation ]
  - task: interpolate-env-creds
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
      PREFIX: '/concourse/sandbox'
      SKIP_MISSING: false
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configuration
  - task: download-opsman-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product/opsman.yml
      SOURCE: s3
    input_mapping:
      config: interpolated-configuration
    output_mapping:
      downloaded-product: opsman-image
  - task: upgrade-opsman
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upgrade-opsman.yml
    input_mapping:
      env: interpolated-configuration
      config: interpolated-configuration
      image: opsman-image
    params:
      ENV_FILE: sandbox/env.yml
      OPSMAN_CONFIG_FILE: sandbox/opsman.yml
      STATE_FILE: state-$timestamp.yml
    ensure:
      do:
      - put: state
        params: { file: generated-state/state-*.yml }
  - task: configure-director
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-director.yml
    input_mapping:
      env: interpolated-configuration
      config: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml
      DIRECTOR_CONFIG_FILE: sandbox/director.yml
  - task: apply-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-director-changes.yml
    input_mapping:
      env: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml
  - task: export-installation
    image: platform-automation-image
    file: platform-automation-tasks/tasks/export-installation.yml
    input_mapping:
      env: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml
  - put: installation
    params: { file: installation/installation-*.zip }

- name: upload-and-stage-pas
  plan:
  - in_parallel:
    - get: platform-automation-tasks
      params: { unpack: true }
    - get: platform-automation-image
      params: { unpack: true }
    - get: configuration
    - get: pas-product
      trigger: true
  - task: interpolate-env-creds
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
      PREFIX: '/concourse/sandbox'
      SKIP_MISSING: false
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configuration
  - task: download-srt-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product/pas.yml
      SOURCE: s3
    input_mapping:
      config: interpolated-configuration
    output_mapping:
      downloaded-product: srt-tile
  - task: upload-and-stage-pas
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-and-stage-product.yml
    input_mapping:
      product: srt-tile
      env: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml
  - task: upload-stemcell
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-stemcell.yml
    input_mapping:
      stemcell: downloaded-stemcell
      env: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml

- name: upload-and-stage-ncp
  plan:
  - in_parallel:
    - get: platform-automation-tasks
      params: { unpack: true }
    - get: platform-automation-image
      params: { unpack: true }
    - get: configuration
    - get: ncp-product
      trigger: true
  - task: interpolate-env-creds
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
      PREFIX: '/concourse/sandbox'
      SKIP_MISSING: false
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configuration
  - task: download-ncp-product
    image: platform-automation-image
    file: platform-automation-tasks/tasks/download-product.yml
    params:
      CONFIG_FILE: download-product/ncp.yml
      SOURCE: s3
    input_mapping:
      config: interpolated-configuration
    output_mapping:
      downloaded-product: ncp-tile
  - task: upload-and-stage-ncp
    image: platform-automation-image
    file: platform-automation-tasks/tasks/upload-and-stage-product.yml
    input_mapping:
      product: ncp-tile
      env: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml

- name: configure-pas
  plan:
  - in_parallel:
    - get: platform-automation-tasks
      params: { unpack: true }
    - get: platform-automation-image
      params: { unpack: true }
    - get: configuration
    - get: pas-product
      passed: [ upload-and-stage-pas ]
      trigger: true
  - task: interpolate-env-creds
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
      PREFIX: '/concourse/sandbox'
      SKIP_MISSING: false
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configuration
  - task: configure-pas
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: interpolated-configuration
      env: interpolated-configuration
    params:
      CONFIG_FILE: sandbox/pas.yml
      ENV_FILE: sandbox/env.yml

- name: configure-ncp
  plan:
  - in_parallel:
    - get: platform-automation-tasks
      params: { unpack: true }
    - get: platform-automation-image
      params: { unpack: true }
    - get: configuration
    - get: ncp-product
      passed: [upload-and-stage-ncp]
      trigger: true
  - task: interpolate-env-creds
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
      PREFIX: '/concourse/sandbox'
      SKIP_MISSING: false
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configuration
  - task: configure-ncp
    image: platform-automation-image
    file: platform-automation-tasks/tasks/configure-product.yml
    input_mapping:
      config: interpolated-configuration
      env: interpolated-configuration
    params:
      CONFIG_FILE: sandbox/ncp.yml
      ENV_FILE: sandbox/env.yml

- name: apply-changes
  plan:
  - in_parallel:
    - get: platform-automation-tasks
      params: { unpack: true }
    - get: platform-automation-image
      params: { unpack: true }
    - get: configuration
    - get: pas-product
      passed: [ configure-pas ]
      trigger: true
    - get: ncp-product
      passed: [ configure-ncp ]
      trigger: true
  - task: interpolate-env-creds
    image: platform-automation-image
    file: platform-automation-tasks/tasks/credhub-interpolate.yml
    params:
      CREDHUB_CLIENT: ((credhub-client))
      CREDHUB_SECRET: ((credhub-secret))
      CREDHUB_SERVER: ((credhub-server))
      CREDHUB_CA_CERT: ((credhub-ca-cert.certificate))
      PREFIX: '/concourse/sandbox'
      SKIP_MISSING: false
    input_mapping:
      files: configuration
    output_mapping:
      interpolated-files: interpolated-configuration
  - task: apply-changes
    image: platform-automation-image
    file: platform-automation-tasks/tasks/apply-changes.yml
    input_mapping:
      env: interpolated-configuration
    params:
      ENV_FILE: sandbox/env.yml
